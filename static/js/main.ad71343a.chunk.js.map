{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","className","classes","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","feedback","setFeedback","countTotalFeedback","totalFeedback","Math","round","countPositiveFeedbackPercentage","Object","keys","prevState","ReactDOM","render","document","getElementById","module","exports"],"mappings":"wOAiBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,gCACI,6BAAKD,IACJC,M,gBCcEC,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,8BACKD,EAAQE,KAAI,SAACC,GAAD,OACT,wBAAqBC,UAAWC,IAAQC,OAAQC,KAAK,SAASC,QAAS,kBAAMP,EAAgBE,IAA7F,SACKA,GADQA,SCedM,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,gCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCCGC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,4BAAIA,KC+CAC,EA7CH,WACR,MAAgCC,mBAAS,CACrCR,KAAM,EACNC,QAAS,EACTC,IAAK,IAHT,mBAAOO,EAAP,KAAiBC,EAAjB,KAaMC,EAAqB,WAEvB,OAD+BF,EAAvBT,KAAuBS,EAAjBR,QAAiBQ,EAARP,KAUrBU,EAAgBD,IAChBP,EAPkC,WACpC,IAAQJ,EAASS,EAATT,KACFG,EAAQQ,IACd,OAAOR,EAAQU,KAAKC,MAAOd,EAAOG,EAAS,KAAO,EAI3BY,GAE3B,OACI,gCACI,cAAC,EAAD,CAAS5B,MAAM,wBAAf,SACI,cAAC,EAAD,CAAiBG,QAAS0B,OAAOC,KAAKR,GAAWlB,gBAxBtC,SAACE,GACpBiB,GAAY,SAAAQ,GAAS,kCACdA,GADc,kBAEhBzB,EAASyB,EAAUzB,GAAU,YAwB9B,cAAC,EAAD,CAASN,MAAM,aAAf,SACKyB,EACG,cAAC,EAAD,CAAYZ,KAAMS,EAAST,KAAMC,QAASQ,EAASR,QAASC,IAAKO,EAASP,IAAKC,MAAOS,EAAeR,mBAAoBA,IAEzH,cAAC,EAAD,CAAcE,QAAQ,+BCtC1Ca,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.ad71343a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n    return (\n        <div>\n            <h2>{title}</h2>\n            {children}\n        </div>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n    return (\n        <div>\n            {options.map((option) => (\n                <button key={option} className={classes.button} type=\"button\" onClick={() => onLeaveFeedback(option)}>\n                    {option}\n                </button>\n            ))}\n        </div>\n    );\n};\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n    return (\n        <div>\n            <p>Good: {good}</p>\n            <p>Neutral: {neutral}</p>\n            <p>Bad: {bad}</p>\n            <p>Total: {total}</p>\n            <p>Positive Feedback: {positivePercentage}%</p>\n        </div>\n    );\n};\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n    return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nconst App = () => {\n    const [feedback, setFeedback] = useState({\n        good: 0,\n        neutral: 0,\n        bad: 0\n    });\n\n    const handleFeedback = (option) => {\n        setFeedback(prevState => ({\n            ...prevState,\n            [option]: prevState[option] + 1\n        }));\n    };\n\n    const countTotalFeedback = () => {\n        const { good, neutral, bad } = feedback;\n        return good + neutral + bad;\n    };\n\n    const countPositiveFeedbackPercentage = () => {\n        const { good } = feedback;\n        const total = countTotalFeedback();\n        return total ? Math.round((good / total) * 100) : 0;\n    };\n\n    const totalFeedback = countTotalFeedback();\n    const positivePercentage = countPositiveFeedbackPercentage();\n\n    return (\n        <div>\n            <Section title=\"Please leave feedback\">\n                <FeedbackOptions options={Object.keys(feedback)} onLeaveFeedback={handleFeedback} />\n            </Section>\n\n            <Section title=\"Statistics\">\n                {totalFeedback ? (\n                    <Statistics good={feedback.good} neutral={feedback.neutral} bad={feedback.bad} total={totalFeedback} positivePercentage={positivePercentage} />\n                ) : (\n                    <Notification message=\"There is no feedback\" />\n                )}\n            </Section>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App \n       />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};"],"sourceRoot":""}